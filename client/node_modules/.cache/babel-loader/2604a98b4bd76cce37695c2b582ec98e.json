{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Robert J\\\\Desktop\\\\wersja 2\\\\client\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport io from \"socket.io-client\";\nimport ReactDOM from 'react-dom'; //Style użyte w programie\n\nconst Page = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  align-items: start;\n  background-color: #46516e;\n  flex-direction: row;\n`;\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 500px;\n  max-height: 500px;\n  overflow: auto;\n  width: 400px;\n  border: 5px solid lightgray;\n  border-radius: 10px;\n  padding-bottom: 10px;\n  margin-top: 25px;\n`;\nconst Container1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 250px;\n  max-height: 500px;\n  overflow: auto;\n  width: 150px;\n  border: 5px solid lightgray;\n  border-radius: 10px;\n  padding-bottom: 10px;\n  margin-top: 25px;\n`;\nconst Form = styled.form`\n  width: 400px;\n`;\nconst Row = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n  text-align: center;\n`;\nconst MyRow = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\nconst MyMessage = styled.div`\n  width: 100%;\n  background-color: pink;\n  color: #46516e;\n  padding: 10px;\n  margin-right: 5px;\n  text-align: center;\n  border-top-right-radius: 10%;\n  border-bottom-right-radius: 10%;\n`;\nconst PartnerRow = styled(MyRow)`\n  justify-content: flex-start;\n`;\nconst PartnerMessage = styled.div`\n  width: 100%;\n  background-color: pink;\n  color: black;\n  border: 1px solid lightgray;\n  padding: 10px;\n  margin-left: 5px;\n  text-align: center;\n  border-top-left-radius: 10%;\n  border-bottom-left-radius: 10%;\n`; //Program głowny po stronie klienta\n\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  useEffect(() => {\n    socketRef.current = io.connect('/'); //Generowanie nazwy użytkownika\n\n    var name = \"User\" + Math.floor(Math.random() * (123123 - 1 + 1) + 1);\n    socketRef.current.emit(\"new user\", name);\n    socketRef.current.on('send message', data => {\n      const messageObject = {\n        body: data\n      };\n      receivedMessage(messageObject);\n    }); //Przesyłanie listy aktywnych użytkowników \n\n    socketRef.current.on('server message', message => {\n      var element = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }\n      }, message.map(user => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 55\n          }\n        }, user);\n      }));\n      ReactDOM.render(element, document.getElementById('1'));\n    });\n    socketRef.current.on(\"message\", message => {\n      receivedMessage(message);\n    });\n  }, []); //Funkcja do przekazywania wiadomości do okna użytkownika\n\n  function receivedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  }\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MyRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"class\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, \" Aktywni u\\u017Cytkownicy: \")), /*#__PURE__*/React.createElement(MyRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"class\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, \" Wyniki pomiar\\xF3w pr\\u0119dko\\u015Bci wiatru: \")), /*#__PURE__*/React.createElement(MyRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }), messages.map((message, index) => {\n    return /*#__PURE__*/React.createElement(MyRow, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(MyMessage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, message.body));\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Robert J/Desktop/wersja 2/client/src/App.js"],"names":["React","useState","useEffect","useRef","styled","io","ReactDOM","Page","div","Container","Container1","Form","form","Row","MyRow","MyMessage","PartnerRow","PartnerMessage","App","messages","setMessages","socketRef","current","connect","name","Math","floor","random","emit","on","data","messageObject","body","receivedMessage","message","element","map","user","render","document","getElementById","oldMsgs","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport io from \"socket.io-client\";\nimport ReactDOM from 'react-dom';\n\n//Style użyte w programie\nconst Page = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  align-items: start;\n  background-color: #46516e;\n  flex-direction: row;\n`;\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 500px;\n  max-height: 500px;\n  overflow: auto;\n  width: 400px;\n  border: 5px solid lightgray;\n  border-radius: 10px;\n  padding-bottom: 10px;\n  margin-top: 25px;\n`;\nconst Container1 = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 250px;\n  max-height: 500px;\n  overflow: auto;\n  width: 150px;\n  border: 5px solid lightgray;\n  border-radius: 10px;\n  padding-bottom: 10px;\n  margin-top: 25px;\n`;\n\n\nconst Form = styled.form`\n  width: 400px;\n`;\n\n\nconst Row = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n  text-align: center;\n`;\n\nconst MyRow = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 10px;\n`;\n\nconst MyMessage = styled.div`\n  width: 100%;\n  background-color: pink;\n  color: #46516e;\n  padding: 10px;\n  margin-right: 5px;\n  text-align: center;\n  border-top-right-radius: 10%;\n  border-bottom-right-radius: 10%;\n`;\n\nconst PartnerRow = styled(MyRow)`\n  justify-content: flex-start;\n`;\n\nconst PartnerMessage = styled.div`\n  width: 100%;\n  background-color: pink;\n  color: black;\n  border: 1px solid lightgray;\n  padding: 10px;\n  margin-left: 5px;\n  text-align: center;\n  border-top-left-radius: 10%;\n  border-bottom-left-radius: 10%;\n`;\n\n\n//Program głowny po stronie klienta\nconst App = () => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n\n    useEffect(() => {\n    socketRef.current = io.connect('/');\n\n    //Generowanie nazwy użytkownika\n    var name = \"User\" + Math.floor(Math.random()*(123123-1+1)+1);\n    socketRef.current.emit(\"new user\", name);\n\n    socketRef.current.on('send message', data => {\n        const messageObject = {\n        body: data\n      };\n      receivedMessage(messageObject);\n\n    });\n\n\n    //Przesyłanie listy aktywnych użytkowników \n    socketRef.current.on('server message', message => {\n      var element = <div>{message.map(user => {return <li>{user}</li>})}</div>;\n      ReactDOM.render(element, document.getElementById('1'));\n\n    });\n\n    \n    socketRef.current.on(\"message\", (message) => {\n      receivedMessage(message);\n    })\n\n    \n  }, []);\n\n  \n  //Funkcja do przekazywania wiadomości do okna użytkownika\n  function receivedMessage(message) {\n    setMessages(oldMsgs => [...oldMsgs, message]);\n  }\n\n\n\n  return (\n    <Page>\n      <Container1>\n      <MyRow></MyRow>\n      <Row>\n      <class> Aktywni użytkownicy: </class>\n      </Row>\n      <MyRow></MyRow>\n      <div id=\"1\"></div>\n      \n      </Container1>\n\n\n      <Container>\n        <Row>\n        <class> Wyniki pomiarów prędkości wiatru: </class></Row>\n        <MyRow></MyRow>\n        {messages.map((message, index) => {\n            return (\n              <MyRow key={index}>\n                {\n                // if(message.body.slice(2) >50)\n               // {\n                //   <PartnerMessage>\n                //   {message.body}\n                // </PartnerMessage>\n               // }\n                }\n               \n              <MyMessage>\n                  {message.body}\n              </MyMessage>\n\n              </MyRow>\n            )\n        })}\n      </Container>\n      \n    </Page>\n  );\n\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}